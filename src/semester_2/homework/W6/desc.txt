
    Напиши реализацию интерфейса Playable:
        - Метод List<String> play()
        - Метод List<String> playWith(Playable playable)

    Напиши реализацию абстрактного класса Instrument:
        - Класс должен реализовать интерфейс Playable
        - Поля класса - sound:String, times:Integer (количество построений звука) (+ конструктор/геттеры)

        - Реализация List<String> play() - метод возвращает список из одной
            строки сформированной по правилу (sound + " ") * times

        - Реализация List<String> playWith(Playable playable) - метод должен вернуть массив
            результатов игры инструментов в порядке вызова - сначала класс у которого вызвали метод,
            затем класс который передали в качестве аргумента

    Напиши реализацию классов Guitar и Drum:
        - Классы наследуют класс Instrument
        - Конструкторы классов не должны принимать никакие аргументы
        - sound для Guitar "Трунь" и times 2
        - sound для Drum "Бац" и times 3

    Напиши реализацию класса Orchestra
        - Поля - instruments:List<Instrument> (+геттер)

        - Конструктор класса должен принимать любое число аргументов типа Instrument
            Подсказка: загугли что такое функции с переменным числом аргументов и сделай так же

        - Класс должен реализовать интерфейс Playable

        - Реализация List<String> play() - вызываются методы play всех инструментов оркестра,
            результаты вызовов собираются в список и возвращаются

        - Реализация List<String> playWith(Playable playable) - метод должен вернуть массив
            результатов в порядке вызова - сначала класс у которого вызвали метод,
            затем класс который передали в качестве аргумента